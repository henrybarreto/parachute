openapi: 3.0.3
info: 
  title: Parachute
  version: 0.1.0
  description: Parachute OpenAPI's specification.
  contact: 
    name: Henry Barreto
    email: me@henrybarreto.dev
  license: 
    name: MIT
    url: github.com/henrybarreto/parachute/LICENSE.txt
servers: 
  - description: Parachute server.
    url: https://parachute.example/api/v1
paths: 
  /upload:
    post:
      operationId: upload
      summary: Upload file
      description: Uploads a file to the server.
      requestBody: 
        content: 
          application/json: 
            schema: 
              type: object
              properties: 
                password:
                  description: |
                    File's password.

                    Minimum eight characters, at least one letter and one number.
                  type: string
                  format: password
                  pattern: "^(?=.*[A-Za-z])(?=.*[0-9])[A-Za-z0-9]]{8,}$"
                  example: Example123
                times: 
                  description: File's download times..
                  type: integer 
                  minimum: 1
                  maximum: 100
                  example: 1 
                address:
                  description: File's download allowd address.
                  type: string
                  format: ipv4
                  example: 127.0.0.1 
      responses: 
        # TODO
        500: 
          description: Internal server error.
          content: 
            application/json: 
              schema: 
                properties:
                  message:
                    description: Internal error's message
                    type: string
  /download/{file}:
    post:
      operationId: download
      summary: Download file
      description: Downloads a file from the server.
      parameters: 
        - name: file
          description: File's name.
          schema: 
            type: string
            example: xytjlxza
          required: true
          in: path 
      requestBody: 
        content: 
          application/json: 
            schema: 
              type: object
              properties: 
                password:
                  description: |
                    File's password.

                    Minimum eight characters, at least one letter and one number.
                  type: string
                  format: password
                  pattern: "^(?=.*[A-Za-z])(?=.*[0-9])[A-Za-z0-9]]{8,}$"
                  example: Example123
                hash:
                  description: File's hash.
                  type: string
                  pattern: "^[A-F0-9]{32}"
                  example: 1a79a4d60de6718e8e5b326e338ae533
      responses: 
        # TODO
        404: 
          description: File not found.
          content: 
            application/json: 
              schema: 
                properties:
                  message:
                    description: File not found's message
                    type: string
                    example: "File xytjlxza not found"
        500: 
          description: Internal server error.
          content: 
            application/json: 
              schema: 
                properties:
                  message:
                    description: Internal error's message
                    type: string
